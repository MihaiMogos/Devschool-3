{
  "_args": [
    [
      {
        "raw": "vow-queue@^0.4.1",
        "scope": null,
        "escapedName": "vow-queue",
        "name": "vow-queue",
        "rawSpec": "^0.4.1",
        "spec": ">=0.4.1 <0.5.0",
        "type": "range"
      },
      "D:\\devschool\\frontend\\codelabs\\gulp\\Gulp_Introduction\\ToDo App - AngularJs\\node_modules\\vow-fs"
    ]
  ],
  "_from": "vow-queue@>=0.4.1 <0.5.0",
  "_id": "vow-queue@0.4.2",
  "_inCache": true,
  "_location": "/vow-queue",
  "_nodeVersion": "0.12.0",
  "_npmUser": {
    "name": "dfilatov",
    "email": "dfilatov@yandex-team.ru"
  },
  "_npmVersion": "2.5.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "vow-queue@^0.4.1",
    "scope": null,
    "escapedName": "vow-queue",
    "name": "vow-queue",
    "rawSpec": "^0.4.1",
    "spec": ">=0.4.1 <0.5.0",
    "type": "range"
  },
  "_requiredBy": [
    "/vow-fs"
  ],
  "_resolved": "https://registry.npmjs.org/vow-queue/-/vow-queue-0.4.2.tgz",
  "_shasum": "e7fe17160e15c7c4184d1b666a9bc64e18e30184",
  "_shrinkwrap": null,
  "_spec": "vow-queue@^0.4.1",
  "_where": "D:\\devschool\\frontend\\codelabs\\gulp\\Gulp_Introduction\\ToDo App - AngularJs\\node_modules\\vow-fs",
  "author": {
    "name": "Dmitry Filatov",
    "email": "dfilatov@yandex-team.ru"
  },
  "bugs": {
    "url": "https://github.com/dfilatov/vow-queue/issues"
  },
  "contributors": [
    {
      "name": "Dmitry Filatov",
      "email": "dfilatov@yandex-team.ru"
    }
  ],
  "dependencies": {
    "vow": "~0.4.0"
  },
  "description": "Vow-based task queue",
  "devDependencies": {
    "chai": "*",
    "istanbul": "0.1.39",
    "jscs": "1.0.0",
    "jshint": "2.1.3",
    "mocha": "1.11.0",
    "mocha-istanbul": "*"
  },
  "directories": {},
  "dist": {
    "shasum": "e7fe17160e15c7c4184d1b666a9bc64e18e30184",
    "tarball": "https://registry.npmjs.org/vow-queue/-/vow-queue-0.4.2.tgz"
  },
  "engines": {
    "node": ">= 0.8.0"
  },
  "gitHead": "a64739cf166a4f4077685091adb83eaba745c4b2",
  "homepage": "https://github.com/dfilatov/vow-queue#readme",
  "main": "lib/queue",
  "maintainers": [
    {
      "name": "dfilatov",
      "email": "dfilatov@yandex-team.ru"
    }
  ],
  "name": "vow-queue",
  "optionalDependencies": {},
  "readme": "vow-queue [![NPM version](https://badge.fury.io/js/vow-queue.png)](http://badge.fury.io/js/vow-queue) [![Build Status](https://secure.travis-ci.org/dfilatov/vow-queue.png)](http://travis-ci.org/dfilatov/vow-queue)\n===============\n\nvow-queue is a module for task queue with weights and priorities\n\nInstallation\n------------\n\nModule can be installed using `npm`:\n\n```\nnpm install vow-queue\n```\n\nor `bower`:\n\n```\nbower install vow-queue\n```\n\nUsage\n-----\n\n````javascript\nvar Queue = require('vow-queue'),\n    queue = new Queue({ weightLimit : 10 });\n    \nqueue.enqueue(function() { // simple function\n    return 2 * 2;\n});\n\nqueue.enqueue(function() { // function returns a promise\n    // do job\n    return promise;\n});\n\nqueue.enqueue( // task with custom priority and weight\n    function() {\n        // do job\n    },\n    {\n        priority : 3, // this task will be started before the previous two\n        weight   : 5\n    });\n    \nqueue.start(); // starts tasks processing\n\nqueue.enqueue(function() { }); // and enqueue yet another task\n````\n\nAPI\n-----\n### Creating queue\n####new Queue([params])\n  * `params.weightLimit=100` limit of summary tasks weight which can be processed concurrently\n\n### Methods of queue\n####Promise enqueue(taskFn, [taskParams])\nEnqueue given task in queue\n  * `taskFn` task function which can return either a promise or a value\n  * `taskParams.weight=1` weight of given task\n  * `taskParams.priority=1` priority of given task\n\nReturns promise which will be resolved when given task is done\n\n####void start()\nStarts processing of tasks in queue\n\n####void stop()\nStops processing of tasks in queue\n\n####Boolean isStarted()\nReturns whether processing is started\n\n####void setParams(params)\nSets queue params\n* `params.weightLimit=100` limit of summary tasks weight which can be processed concurrently\n\n####Object getStats()\nReturns statistics about queue\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/dfilatov/vow-queue.git"
  },
  "scripts": {
    "clean": "make clean",
    "coverage": "make coverage",
    "lint": "make lint",
    "test": "make validate"
  },
  "version": "0.4.2"
}
