{
  "_args": [
    [
      {
        "raw": "vow-fs@~0.3.4",
        "scope": null,
        "escapedName": "vow-fs",
        "name": "vow-fs",
        "rawSpec": "~0.3.4",
        "spec": ">=0.3.4 <0.4.0",
        "type": "range"
      },
      "D:\\devschool\\frontend\\codelabs\\gulp\\Gulp_Introduction\\ToDo App - AngularJs\\node_modules\\jscs"
    ]
  ],
  "_from": "vow-fs@>=0.3.4 <0.4.0",
  "_id": "vow-fs@0.3.6",
  "_inCache": true,
  "_location": "/vow-fs",
  "_nodeVersion": "4.4.7",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/vow-fs-0.3.6.tgz_1470390666817_0.2630411759018898"
  },
  "_npmUser": {
    "name": "dfilatov",
    "email": "dfilatov@yandex-team.ru"
  },
  "_npmVersion": "2.15.8",
  "_phantomChildren": {},
  "_requested": {
    "raw": "vow-fs@~0.3.4",
    "scope": null,
    "escapedName": "vow-fs",
    "name": "vow-fs",
    "rawSpec": "~0.3.4",
    "spec": ">=0.3.4 <0.4.0",
    "type": "range"
  },
  "_requiredBy": [
    "/jscs"
  ],
  "_resolved": "https://registry.npmjs.org/vow-fs/-/vow-fs-0.3.6.tgz",
  "_shasum": "2d4c59be22e2bf2618ddf597ab4baa923be7200d",
  "_shrinkwrap": null,
  "_spec": "vow-fs@~0.3.4",
  "_where": "D:\\devschool\\frontend\\codelabs\\gulp\\Gulp_Introduction\\ToDo App - AngularJs\\node_modules\\jscs",
  "author": {
    "name": "Dmitry Filatov",
    "email": "dfilatov@yandex-team.ru"
  },
  "bugs": {
    "url": "https://github.com/dfilatov/vow-fs/issues"
  },
  "contributors": [
    {
      "name": "Dmitry Filatov",
      "email": "dfilatov@yandex-team.ru"
    }
  ],
  "dependencies": {
    "glob": "^7.0.5",
    "uuid": "^2.0.2",
    "vow": "^0.4.7",
    "vow-queue": "^0.4.1"
  },
  "description": "File I/O by Vow",
  "devDependencies": {
    "istanbul": "",
    "nodeunit": ""
  },
  "directories": {},
  "dist": {
    "shasum": "2d4c59be22e2bf2618ddf597ab4baa923be7200d",
    "tarball": "https://registry.npmjs.org/vow-fs/-/vow-fs-0.3.6.tgz"
  },
  "engines": {
    "node": ">= 0.6.0"
  },
  "files": [
    "lib"
  ],
  "gitHead": "88d6f49aac47b35b242c56730ac8f53c8fa1c2f3",
  "homepage": "https://github.com/dfilatov/vow-fs",
  "keywords": [
    "vow",
    "promise",
    "file system"
  ],
  "license": "MIT",
  "main": "lib/fs",
  "maintainers": [
    {
      "name": "dfilatov",
      "email": "dfilatov@yandex-team.ru"
    }
  ],
  "name": "vow-fs",
  "optionalDependencies": {},
  "readme": "vow-fs [![NPM version](https://badge.fury.io/js/vow-fs.png)](http://badge.fury.io/js/vow-fs) [![Build Status](https://secure.travis-ci.org/dfilatov/vow-fs.png)](http://travis-ci.org/dfilatov/vow-fs)\n======\n\n[Vow](https://github.com/dfilatov/vow)-based file I/O for Node.js\n\nRequirements\n------------\nVow-fs works with Node.js 0.6 and above.\n\nGetting Started\n---------------\nYou can install vow-fs using Node Package Manager (npm):\n\n    npm install vow-fs\n\n####Usage####\n````javascript\nvar fs = require('vow-fs');\n````\n\nAPI\n---\n####read(path, [encoding])####\nReturns a promise for the file's content at a given ````path````.\n####write(path, data, [encoding])####\nWrites ````data```` to file at a given ````path````. Returns a promise for the completion of the operation.\n####append(path, data, [encoding])####\nAppends````data```` to file's content at a given ````path````. Returns a promise for the completion of the operation.\n####remove(path)####\nRemoves a file at a given ````path````. Returns a promise for the completion of the operation.\n####copy(sourcePath, targetPath)####\nCopies a file from ````sourcePath```` to ````targetPath````. Returns a promise for the completion of the operation.\n####move(sourcePath, targetPath)####\nMoves a file or directory from ````sourcePath```` to ````targetPath````. Returns a promise for the completion of the operation.\n####stat(path)####\nReturns a promise for the metadata about the given ````path```` as a [Stats](http://nodejs.org/api/fs.html#fs_class_fs_stats) object.\n####exists(path)####\nReturns a promise for whether the given ````path```` exists.\n####link(sourcePath, targetPath)####\nCreates a hard link from the ````sourcePath```` to ````targetPath````.\n####symLink(sourcePath, targetPath, [type=file])####\nCreates a symbolic link from the ````sourcePath```` to ````targetPath````.\n####chown(path, uid, gid)####\nChanges the owner of a given ````path````.\n####chmod(path, mode)####\nChanges the mode of a given ````path```` to ````mode````.\n####absolute(path)####\n####isFile(path)####\nReturns a promise for whether the given ````path```` is a file.\n####isDir(path)####\nReturns a promise for whether the given ````path```` is a directory.\n####isSocket(path)####\nReturns a promise for whether the given ````path```` is a socket.\n####isSymLink(path)####\nReturns a promise for whether the given ````path```` is a symbolic link.\n####makeTmpFile([options])####\nMakes a temporary file. Returns a promise with generated path to file.\nThe ````options````:\n  * prefix (absent by default)\n  * dir (operating system's directory for temp files by default)\n  * ext (````.tmp```` by default)\n\n####listDir(path)####\nReturns a promise for a list of files and directories in directory at the given ````path````.\n####makeDir(path, [mode=0777], [failIfExist=false])####\nMakes a directory at a given ````path```` and any necessary subdirectories (like ````mkdir -p````). Returns a promise for the completion of the operation.\n####removeDir(path)####\nRecursively removes a directory at a given path (like ````remove -rf````). Returns a promise for the completion of the operation.\n####glob(pattern, [options])####\nMatches files using the patterns. See https://github.com/isaacs/node-glob for details.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/dfilatov/vow-fs.git"
  },
  "scripts": {
    "test": "istanbul test test/runner.js"
  },
  "version": "0.3.6"
}
